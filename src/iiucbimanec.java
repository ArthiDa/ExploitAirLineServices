
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Hp
 */
public class iiucbimanec extends javax.swing.JFrame {

    /**
     * Creates new form iiucbimanec
     */
    int nc = 0,ac = 0, gc = 0;
    int click=0;
    public iiucbimanec() {
        initComponents();
        this.getRootPane().setDefaultButton(jButton1);
        showStudentTable();
    }
    private void showStudentTable(){
        String columnNames[] = {"Ticket Number","Name","Age","Gender"};
        DefaultTableModel bClassModel = new DefaultTableModel(columnNames,0);
        
        String query = "SELECT * FROM b_c_iiuc";
        try{
            ResultSet rs = DBUTILS.queryExecute(query);
            while(rs.next()){
                if("E-C".equals(rs.getString("Class"))){
                    String ticket = rs.getString("Ticket");
                    String name = rs.getString("Name");
                    String age = rs.getString("Age");
                    String gender = rs.getString("Gender");
                    String data[] = {ticket,name,age,gender};
                    bClassModel.addRow(data);
                }
            }
            
            bcField.setModel(bClassModel);
                
        } catch(Exception e){
            
        }
    }
    private void nullField(){
        nameField.setText(null);
        ageField.setText(null);
        genderField.setText(null); 
        noField.setText(null);
        yesField.setText(null);
        ticketField.setText(null);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bcField = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new RoundedPanel(20);
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        noField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        ageField = new javax.swing.JTextField();
        yesField = new javax.swing.JTextField();
        genderField = new javax.swing.JTextField();
        bookButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        ticketField = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(615, 439));

        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0,0));
        jPanel2.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 36)); // NOI18N
        jLabel2.setText("Passenger List");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(190, 0, 230, 40);

        bcField.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        bcField.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(bcField);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(70, 40, 452, 150);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Total Ticket--> 35");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(450, 0, 140, 40);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 600, 190);

        jPanel4.setBackground(new java.awt.Color(237,249,239,100));
        jPanel4.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Enter Ticket Number");
        jPanel4.add(jLabel3);
        jLabel3.setBounds(0, 20, 190, 20);

        jButton1.setBackground(new java.awt.Color(51, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton1.setText("Search");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1);
        jButton1.setBounds(248, 15, 90, 29);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Ticket Availability");
        jPanel4.add(jLabel5);
        jLabel5.setBounds(10, 60, 230, 40);
        jPanel4.add(noField);
        noField.setBounds(280, 68, 40, 26);

        nameField.setText("Enter your Name");
        jPanel4.add(nameField);
        nameField.setBounds(10, 120, 170, 26);

        ageField.setText("Age");
        jPanel4.add(ageField);
        ageField.setBounds(200, 120, 40, 26);
        jPanel4.add(yesField);
        yesField.setBounds(230, 68, 40, 26);

        genderField.setText("Gender");
        jPanel4.add(genderField);
        genderField.setBounds(250, 120, 80, 26);

        bookButton.setBackground(new java.awt.Color(102, 255, 102));
        bookButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        bookButton.setText("Book");
        bookButton.setToolTipText("");
        bookButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookButtonActionPerformed(evt);
            }
        });
        jPanel4.add(bookButton);
        bookButton.setBounds(135, 153, 73, 29);

        cancelButton.setBackground(new java.awt.Color(255, 0, 0));
        cancelButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelButton.setPreferredSize(new java.awt.Dimension(91, 29));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel4.add(cancelButton);
        cancelButton.setBounds(240, 153, 87, 29);

        ticketField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ticketFieldMouseClicked(evt);
            }
        });
        jPanel4.add(ticketField);
        ticketField.setBounds(190, 17, 50, 26);

        updateButton.setBackground(new java.awt.Color(255, 255, 51));
        updateButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        updateButton.setText("Update");
        updateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        jPanel4.add(updateButton);
        updateButton.setBounds(10, 153, 91, 29);

        jPanel1.add(jPanel4);
        jPanel4.setBounds(130, 200, 340, 190);
        jPanel4.setOpaque(false);

        backButton.setBackground(new java.awt.Color(51, 51, 255));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        backButton.setText("Back");
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backButton);
        backButton.setBounds(500, 360, 71, 29);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/plane.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 600, 400);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String ticket = ticketField.getText();
        if("".equals(ticket) || Integer.valueOf(ticket)==0){
            JOptionPane.showMessageDialog(this,"The Ticket is invalid","Error",JOptionPane.ERROR_MESSAGE);
            nullField();
            showStudentTable();
        }
        else if(Integer.valueOf(ticket)>60 || Integer.valueOf(ticket)<26){
            JOptionPane.showMessageDialog(this,"The Ticket is invalid","Error",JOptionPane.ERROR_MESSAGE);
            nullField();
        }
        else if(Integer.valueOf(ticket)>25 && Integer.valueOf(ticket)<61 ){
        int t = Integer.valueOf(ticket);
        String query = "select *from b_c_iiuc where Ticket = "+t;
        String nameDb = null;
        String ageDb = null;
        String genderDb = null;
        
        try{
            ResultSet rs = DBUTILS.queryExecute(query);
            if(rs.next()){
                    nameDb = rs.getString("Name");
                    ageDb = rs.getString("Age");
                    genderDb = rs.getString("Gender");
            }
        } catch(SQLException | ClassNotFoundException e){
            
        }
        if(nameDb!=null){
            yesField.setText(null);
            noField.setText("NO");
            JOptionPane.showMessageDialog(this,"The Ticket has Already been Booked","Information",JOptionPane.INFORMATION_MESSAGE);
            nameField.setText(nameDb);
            ageField.setText(ageDb);
            genderField.setText(genderDb);
        }
        else{
            noField.setText(null);
            yesField.setText("Yes");
            JOptionPane.showMessageDialog(this,"The Ticket has not been Booked yet","Information",JOptionPane.INFORMATION_MESSAGE);
            nameField.setText(null);
            ageField.setText(null);
            genderField.setText(null);           
        }
        noField.setEditable(false);
        yesField.setEditable(false);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookButtonActionPerformed
        String ticket = ticketField.getText();
        if("".equals(ticket) || Integer.valueOf(ticket)==0){
            JOptionPane.showMessageDialog(this,"The Ticket is invalid","Error",JOptionPane.ERROR_MESSAGE);
            nullField();
            showStudentTable();
        }
        else if(Integer.valueOf(ticket)>60 || Integer.valueOf(ticket)<26){
            JOptionPane.showMessageDialog(this,"The Ticket is invalid","Error",JOptionPane.ERROR_MESSAGE);
            nullField();
        }
        else if("".equals(nameField.getText()) || "".equals(ageField.getText()) || "".equals(genderField.getText())){
            JOptionPane.showMessageDialog(this,"The Ticket is invalid","Error",JOptionPane.ERROR_MESSAGE);
            
        }
        else if(Integer.valueOf(ticket)>25 && Integer.valueOf(ticket)<61 ){
            int t = Integer.valueOf(ticket);
        String name = nameField.getText();
        String age = ageField.getText();
        String gender = genderField.getText();
        String bc = "E-C";
        
        String query = "insert into b_c_iiuc (Ticket,Name,Age,Gender,Class) values ("+ticket+", '"+name+"',"+age+",'"+gender+"','"+bc+"')";
        
        try{
            int rs = DBUTILS.queryUpdate(query);
        } catch(Exception e){
            e.printStackTrace();
        }
        JOptionPane.showMessageDialog(this,"The Ticket is SUCCESSFULLY Booked","Successful",JOptionPane.INFORMATION_MESSAGE);
        }
        nullField();
        showStudentTable();
        
    }//GEN-LAST:event_bookButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        String ticket = ticketField.getText();
        if("".equals(ticket) || Integer.valueOf(ticket)==0){
            JOptionPane.showMessageDialog(this,"The Ticket is invalid","Error",JOptionPane.ERROR_MESSAGE);
            nullField();
            showStudentTable();
        }
        else if(Integer.valueOf(ticket)>60 || Integer.valueOf(ticket)<26){
            JOptionPane.showMessageDialog(this,"The Ticket is invalid","Error",JOptionPane.ERROR_MESSAGE);
            nullField();
        }
        else if("".equals(nameField.getText()) || "".equals(ageField.getText()) || "".equals(genderField.getText())){
            JOptionPane.showMessageDialog(this,"The Ticket is invalid","Error",JOptionPane.ERROR_MESSAGE);
            
        }
        
        else if(Integer.valueOf(ticket)>25 && Integer.valueOf(ticket)<61 ){
            int t = Integer.valueOf(ticket);
        String query = "delete from b_c_iiuc where Ticket = "+t;
        
        try{
            int rs = DBUTILS.queryUpdate(query);
        } catch(Exception e){
            
        }
        JOptionPane.showMessageDialog(this,"The Ticket is SUCCESSFULLY Canceled","Successful",JOptionPane.INFORMATION_MESSAGE);
        }
        nullField();
        showStudentTable();
        
        
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        String ticket = ticketField.getText();
        if("".equals(ticket) || Integer.valueOf(ticket)==0){
            JOptionPane.showMessageDialog(this,"The Ticket is invalid","Error",JOptionPane.ERROR_MESSAGE);
            nullField();
            showStudentTable();
        }
        else if(Integer.valueOf(ticket)>60 || Integer.valueOf(ticket)<26){
            JOptionPane.showMessageDialog(this,"The Ticket is invalid","Error",JOptionPane.ERROR_MESSAGE);
            nullField();
        }
        else if("".equals(nameField.getText()) || "".equals(ageField.getText()) || "".equals(genderField.getText())){
            JOptionPane.showMessageDialog(this,"The Ticket is invalid","Error",JOptionPane.ERROR_MESSAGE);
            
        }
        
        else if(Integer.valueOf(ticket)>25 && Integer.valueOf(ticket)<61 ){
            int t = Integer.valueOf(ticket);
        String name = nameField.getText();
        String age = ageField.getText();
        String gender = genderField.getText();
        String bc = "E-C";
        String query = "update b_c_iiuc SET Name = '"+name+"', Age = "+age+", Gender = '"+gender+"', Class = '"+bc+"' where Ticket = "+t;
        try{
            int rs = DBUTILS.queryUpdate(query);
            
        } catch(Exception e){
            e.printStackTrace();
        }
        JOptionPane.showMessageDialog(this,"The Ticket is SUCCESSFULLY Updated","Successful",JOptionPane.INFORMATION_MESSAGE);
        
        }
        nullField();
        showStudentTable();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.setVisible(false);
        new planelist().setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void ticketFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticketFieldMouseClicked
        click++;
        if(click==1){
            nameField.setText(null);
            ageField.setText(null);
            genderField.setText(null);

        }
    }//GEN-LAST:event_ticketFieldMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(iiucbimanec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(iiucbimanec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(iiucbimanec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(iiucbimanec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new iiucbimanec().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ageField;
    private javax.swing.JButton backButton;
    private javax.swing.JTable bcField;
    private javax.swing.JButton bookButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField genderField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField noField;
    private javax.swing.JTextField ticketField;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField yesField;
    // End of variables declaration//GEN-END:variables
    class RoundedPanel extends JPanel
    {
        private Color backgroundColor;
        private int cornerRadius = 15;
        public RoundedPanel(int radius) {
            super();
            cornerRadius = radius;
            
        }
        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Dimension arcs = new Dimension(cornerRadius, cornerRadius);
            int width = getWidth();
            int height = getHeight();
            Graphics2D graphics = (Graphics2D) g;
            graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            //Draws the rounded panel with borders.
            if (backgroundColor != null) {
                graphics.setColor(backgroundColor);
            } else {
                graphics.setColor(getBackground());
            }
            graphics.fillRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height); //paint background
            graphics.setColor(getForeground());
//            graphics.drawRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height); //paint border
//             
        }
    }
}
